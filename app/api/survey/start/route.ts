// app/api/survey/start/route.ts
import { NextResponse } from "next/server";
import nodemailer from "nodemailer";



export async function POST(req: Request) {
    try {
        const { email, totalScore, maxScore, answers, advice } = await req.json();

        // Gmail —Ç–æ—Ö–∏—Ä–≥–æ–æ —à–∞–ª–≥–∞—Ö
        console.log("=== GMAIL –¢–û–•–ò–†–ì–û–û –®–ê–õ–ì–ê–õ–¢ ===");
        console.log("NODE_ENV:", process.env.NODE_ENV);
        console.log("GMAIL_USER:", process.env.GMAIL_USER || "–¢–û–•–ò–†–£–£–õ–ê–ê–ì“Æ–ô");
        console.log("GMAIL_APP_PASSWORD length:", process.env.GMAIL_APP_PASSWORD?.length || 0);
        console.log("GMAIL_APP_PASSWORD –±–∞–π–≥–∞–∞ —ç—Å—ç—Ö:", !!process.env.GMAIL_APP_PASSWORD);
        console.log("================================");

        if (!process.env.GMAIL_USER || !process.env.GMAIL_APP_PASSWORD) {
            console.log("‚ùå Gmail —Ç–æ—Ö–∏—Ä–≥–æ–æ –¥—É—Ç—É—É –±–∞–π–Ω–∞");
            return NextResponse.json({
                message: "–¢–µ—Å—Ç –∞–º–∂–∏–ª—Ç—Ç–∞–π —Ö–∏–π–≥–¥–ª—ç—ç! (–ú—ç–π–ª —Ç–æ—Ö–∏—Ä–≥–æ–æ –¥—É—Ç—É—É –±–∞–π–≥–∞–∞ —Ç—É–ª –∏–ª–≥—ç—ç–≥–¥—Å—ç–Ω–≥“Ø–π)",
                debug: {
                    hasGmailUser: !!process.env.GMAIL_USER,
                    hasGmailPassword: !!process.env.GMAIL_APP_PASSWORD,
                    nodeEnv: process.env.NODE_ENV
                }
            });
        }

        const transporter = nodemailer.createTransport({
            service: "gmail",
            host: "smtp.gmail.com",
            port: 587,
            secure: false,
            auth: {
                user: process.env.GMAIL_USER,
                pass: process.env.GMAIL_APP_PASSWORD,
            },
            tls: {
                rejectUnauthorized: false
            }
        });

        // –•–æ–ª–±–æ–ª—Ç—ã–≥ —à–∞–ª–≥–∞—Ö
        try {
            console.log("Gmail —Ö–æ–ª–±–æ–ª—Ç—ã–≥ —à–∞–ª–≥–∞–∂ –±–∞–π–Ω–∞...");
            await transporter.verify();
            console.log("‚úÖ Gmail —Ö–æ–ª–±–æ–ª—Ç –∞–º–∂–∏–ª—Ç—Ç–∞–π");
        } catch (verifyError: unknown) {
            const error = verifyError as Error;
            console.error("‚ùå Gmail —Ö–æ–ª–±–æ–ª—Ç –∞–º–∂–∏–ª—Ç–≥“Ø–π:", error.message);
            return NextResponse.json({
                message: "–¢–µ—Å—Ç –∞–º–∂–∏–ª—Ç—Ç–∞–π —Ö–∏–π–≥–¥–ª—ç—ç! (Gmail —Ö–æ–ª–±–æ–ª—Ç –∞–º–∂–∏–ª—Ç–≥“Ø–π)",
                error: error.message
            });
        }

        // –•–∞—Ä–∏—É–ª—Ç—É—É–¥—ã–Ω –∂–∞–≥—Å–∞–∞–ª—Ç “Ø“Ø—Å–≥—ç—Ö
        const answersList = answers.map((answer: number, index: number) =>
            `<li>–ê—Å—É—É–ª—Ç ${index + 1}: ${answer} –æ–Ω–æ–æ</li>`
        ).join('');

        // –•—É–≤—å —Ç–æ–æ—Ü–æ–æ–ª–æ—Ö
        const percentage = Math.round((totalScore / maxScore) * 100);

        const mailOptions = {
            from: `"Setgel-Zui - –°—ç—Ç–≥—ç–ª–∑“Ø–π–Ω –¢–µ—Å—Ç" <${process.env.GMAIL_USER}>`,
            to: email,
            subject: "–¢–∞–Ω—ã –∞–º—å–¥—Ä–∞–ª—ã–Ω —Å—Ç—Ä–µ—Å—Å–∏–π–Ω —Ç“Ø–≤—à–Ω–∏–π —Ç–∞–π–ª–∞–Ω",
            html: `
                <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
                    <h1 style="color: #4f46e5; text-align: center; border-bottom: 3px solid #4f46e5; padding-bottom: 10px;">
                        üß† –¢–∞–Ω—ã –∞–º—å–¥—Ä–∞–ª—ã–Ω —Å—Ç—Ä–µ—Å—Å–∏–π–Ω —Ç“Ø–≤—à–Ω–∏–π —Ç–∞–π–ª–∞–Ω
                    </h1>
                    
                    <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; border-radius: 10px; text-align: center; margin: 20px 0;">
                        <h2 style="margin: 0; font-size: 24px;">–¢–∞–Ω—ã –Ω–∏–π—Ç –æ–Ω–æ–æ</h2>
                        <p style="font-size: 36px; font-weight: bold; margin: 10px 0;">${totalScore}/${maxScore}</p>
                        <p style="font-size: 18px; margin: 0;">(${percentage}%)</p>
                    </div>

                    <div style="background-color: #f8f9fa; padding: 20px; border-radius: 10px; margin: 20px 0;">
                        <h3 style="color: #495057; margin-top: 0;">üìä –¢–∞–Ω—ã —Ö–∞—Ä–∏—É–ª—Ç—É—É–¥:</h3>
                        <ul style="list-style-type: none; padding: 0;">
                            ${answersList}
                        </ul>
                    </div>

                    <div style="background-color: #e3f2fd; padding: 20px; border-radius: 10px; border-left: 5px solid #2196f3; margin: 20px 0;">
                        <h3 style="color: #1565c0; margin-top: 0;">üí° –ó”©–≤–ª”©–≥”©”©:</h3>
                        <div style="color: #424242; line-height: 1.6;">
                            ${advice}
                        </div>
                    </div>

                    <div style="text-align: center; margin-top: 30px; padding: 20px; background-color: #f5f5f5; border-radius: 10px;">
                        <p style="color: #666; font-size: 14px; margin: 0;">
                            –≠–Ω—ç—Ö“Ø“Ø —Ç–∞–π–ª–∞–Ω —Ç–∞–Ω—ã —Ö—É–≤–∏–π–Ω –º—ç–¥—ç—ç–ª—ç–ª –±”©–≥”©”©–¥ –∑”©–≤—Ö”©–Ω —Ç–∞–Ω–¥ –∑–æ—Ä–∏—É–ª–∞–≥–¥—Å–∞–Ω –±–æ–ª–Ω–æ.
                        </p>
                        <p style="color: #666; font-size: 12px; margin: 10px 0 0 0;">
                            ¬© ${new Date().getFullYear()} Setgel-Zui - –°—ç—Ç–≥—ç–ª–∑“Ø–π–Ω —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º
                        </p>
                    </div>
                </div>
            `,
        };

        try {
            console.log("–ú—ç–π–ª –∏–ª–≥—ç—ç–∂ –±–∞–π–Ω–∞...");
            console.log("From:", mailOptions.from);
            console.log("To:", email);

            await transporter.sendMail(mailOptions);
            console.log("–ú—ç–π–ª –∞–º–∂–∏–ª—Ç—Ç–∞–π –∏–ª–≥—ç—ç–≥–¥–ª—ç—ç:", email);
            return NextResponse.json({ message: "–¢–∞–π–ª–∞–Ω –∞–º–∂–∏–ª—Ç—Ç–∞–π –∏–º—ç–π–ª—ç—ç—Ä –∏–ª–≥—ç—ç–≥–¥–ª—ç—ç!" });
        } catch (mailError: unknown) {
            const error = mailError as Error & { name?: string; code?: string };
            console.error("=== –ú–≠–ô–õ –ê–õ–î–ê–ê ===");
            console.error("–ê–ª–¥–∞–∞–Ω—ã —Ç”©—Ä”©–ª:", error.name);
            console.error("–ê–ª–¥–∞–∞–Ω—ã –º–µ—Å—Å–µ–∂:", error.message);
            console.error("–ê–ª–¥–∞–∞–Ω—ã –∫–æ–¥:", error.code);
            console.error("–ë“Ø—Ä—ç–Ω –∞–ª–¥–∞–∞:", error);
            console.error("==================");

            // –ú—ç–π–ª –∏–ª–≥—ç—ç–≥–¥—ç—ç–≥“Ø–π —á —Ç–µ—Å—Ç “Ø—Ä –¥“Ø–Ω –Ω—å –∞–∂–∏–ª–ª–∞—Å–∞–Ω —Ç—É–ª success –±—É—Ü–∞–∞—Ö
            return NextResponse.json({
                message: "–¢–µ—Å—Ç –∞–º–∂–∏–ª—Ç—Ç–∞–π —Ö–∏–π–≥–¥–ª—ç—ç! (–ú—ç–π–ª –∏–ª–≥—ç—ç—Ö—ç–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä—Å–∞–Ω —Ç—É–ª –∏–º—ç–π–ª –∏–ª–≥—ç—ç–≥–¥—Å—ç–Ω–≥“Ø–π)",
                warning: "–ú—ç–π–ª —Ç–æ—Ö–∏—Ä–≥–æ–æ–Ω–¥ –∞–ª–¥–∞–∞ –±–∞–π–Ω–∞",
                errorDetails: {
                    name: error.name,
                    message: error.message,
                    code: error.code
                }
            });
        }

    } catch (error) {
        console.error("API –∞–ª–¥–∞–∞:", error);
        return NextResponse.json(
            {
                message: "–°–µ—Ä–≤–µ—Ä—Ç –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞",
                error: typeof error === "object" && error !== null && "message" in error
                    ? (error as { message: string }).message
                    : String(error)
            },
            { status: 500 }
        );
    }
}
