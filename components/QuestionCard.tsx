"use client";

import * as React from "react";
import type { Question } from "../lib/questions";

type Props = {
    q: Question;
    value?: number;
    onChange: (v: number) => void;
};

// –ê—Å—É—É–ª—Ç—ã–Ω –±“Ø–ª–≥—ç—ç—Ä —Ç–∞–π–ª–±–∞—Ä—É—É–¥
function getLabels(q: Question): Record<number, string> {
    if (q.id.startsWith("S")) {
        // –°—Ç—Ä–µ—Å—Å–∏–π–Ω —Ç“Ø–≤—à–∏–Ω 0‚Äì4
        return {
            0: "–û–≥—Ç “Ø–≥“Ø–π üòå",
            1: "–•–∞–∞—è–∞ üôÇ",
            2: "–ó–∞—Ä–∏–º–¥–∞–∞ üòê",
            3: "–ò—Ö—ç–≤—á–ª—ç–Ω üòü",
            4: "–ú–∞—à –æ–ª–æ–Ω—Ç–æ–æ üò∞",
        };
    }
    if (q.id.startsWith("H")) {
        // –°—ç—Ç–≥—ç–ª —Ö–∞–Ω–∞–º–∂–∏–π–Ω —Ç“Ø–≤—à–∏–Ω 1‚Äì7
        return {
            1: "–û–≥—Ç “Ø–≥“Ø–π üòî",
            2: "–ë–∞—Ä–∞–≥ “Ø–≥“Ø–π üòï",
            3: "–ë–∞–≥–∞ –∑—ç—Ä—ç–≥ üòê",
            4: "–î—É–Ω–¥ –∑—ç—Ä—ç–≥ üôÇ",
            5: "–ù—ç–ª—ç—ç–¥ –∏—Ö üòä",
            6: "–ò—Ö üòÑ",
            7: "–ú–∞—à –∏—Ö üòç",
        };
    }
    // –≠–º–æ—Ü–∏–æ–Ω–∞–ª –æ—é—É–Ω —É—Ö–∞–∞–Ω—ã —Ç“Ø–≤—à–∏–Ω 1‚Äì5
    return {
        1: "–û–≥—Ç “Ø–≥“Ø–π üòû",
        2: "–ë–∞–≥–∞ –∑—ç—Ä—ç–≥ üòê",
        3: "–î—É–Ω–¥ –∑—ç—Ä—ç–≥ üôÇ",
        4: "–ò—Ö üòä",
        5: "–ú–∞—à –∏—Ö üòÑ",
    };
}

export default function QuestionCard({ q, value, onChange }: Props) {
    const labels = getLabels(q);

    // scaleMin..scaleMax –±“Ø—Ö —É—Ç–≥—É—É–¥
    const options = React.useMemo(() => {
        const arr: number[] = [];
        for (let v = q.scaleMin; v <= q.scaleMax; v++) arr.push(v);
        return arr;
    }, [q.scaleMin, q.scaleMax]);

    // const minLabel = labels[q.scaleMin] ?? "–ë–∞–≥–∞";
    // const maxLabel = labels[q.scaleMax] ?? "–ò—Ö";

    return (
        <div className="space-y-8 p-6">
            {/* –ê—Å—É—É–ª—Ç—ã–Ω —Ç–µ–∫—Å—Ç - –∏–ª“Ø“Ø —Ç–æ–º, —Ç–æ–¥ */}
            <div className="text-center space-y-3">
                <h2 className="text-xl sm:text-2xl font-bold text-gray-800 leading-relaxed px-4">
                    {q.text}
                </h2>
            </div>

            {/* –•–∞—Ä–∏—É–ª—Ç—ã–Ω —Ö—ç—Å—ç–≥ */}
            <div className="space-y-6">
                {/* Scale –∑–∞–∞–≤–∞—Ä—á–∏–ª–≥–∞–∞ */}
                <div className="flex justify-between items-center text-xs text-gray-500 px-2">
                    <span>{q.id.startsWith("S") ? "–ë–∞–≥–∞" : q.id.startsWith("H") ? "–û–≥—Ç “Ø–≥“Ø–π" : "–û–≥—Ç “Ø–≥“Ø–π"}</span>
                    <span>{q.id.startsWith("S") ? "–ò—Ö" : q.id.startsWith("H") ? "–ú–∞—à –∏—Ö" : "–ú–∞—à –∏—Ö"}</span>
                </div>

                {/* –¢–æ–≤—á–ª—É—É—Ä—ã–Ω —Ö—ç—Å—ç–≥ - –∏–ª“Ø“Ø —Ç–æ–º, –∏–ª“Ø“Ø —Ç–æ–¥ */}
                <div className="flex flex-wrap gap-3 justify-center px-2">
                    {options.map((v) => {
                        const selected = value === v;
                        return (
                            <button
                                key={v}
                                type="button"
                                onClick={() => onChange(v)}
                                aria-label={`${v}: ${labels[v] ?? ""}`}
                                className={[
                                    "h-14 w-14 sm:h-16 sm:w-16 rounded-2xl border-2 transition-all duration-300",
                                    "flex items-center justify-center text-lg sm:text-xl font-bold focus:outline-none focus:ring-4",
                                    "transform hover:scale-110 active:scale-95",
                                    selected
                                        ? "bg-gradient-to-br from-blue-600 to-purple-600 text-white border-blue-600 shadow-xl scale-110 focus:ring-blue-300"
                                        : "bg-white text-gray-700 border-gray-300 shadow-lg hover:bg-gradient-to-br hover:from-blue-50 hover:to-purple-50 hover:border-blue-400 focus:ring-blue-200",
                                ].join(" ")}
                            >
                                {v}
                            </button>
                        );
                    })}
                </div>

                {/* –°–æ–Ω–≥–æ—Å–æ–Ω —Ö–∞—Ä–∏—É–ª—Ç—ã–Ω —Ç–∞–π–ª–±–∞—Ä - –∏–ª“Ø“Ø —Ç–æ–º, –∏–ª“Ø“Ø –∞–Ω—Ö–∞–∞—Ä–∞–ª —Ç–∞—Ç–∞—Ö—É–π—Ü */}
                <div className="flex justify-center mt-6">
                    <div className={[
                        "px-6 py-3 rounded-2xl border-2 text-center min-h-[60px] flex items-center justify-center transition-all duration-300",
                        value !== undefined
                            ? "bg-gradient-to-r from-blue-100 to-purple-100 border-blue-300 text-blue-800 shadow-lg"
                            : "bg-gray-50 border-gray-200 text-gray-500"
                    ].join(" ")}>
                        <span className="text-base sm:text-lg font-semibold">
                            {value !== undefined ? labels[value] : "üëÜ –•–∞—Ä–∏—É–ª—Ç–∞–∞ —Å–æ–Ω–≥–æ–Ω–æ —É—É"}
                        </span>
                    </div>
                </div>
            </div>
        </div>
    );
}
